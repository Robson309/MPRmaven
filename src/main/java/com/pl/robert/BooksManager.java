package com.pl.robert;

import java.sql.*;
import java.util.*;
import com.pl.robert.*;

public class BooksManager {

	private Connection conn;
	private Statement stmt;
	private PreparedStatement addBookStmt;
	private PreparedStatement getBookStmt;
	private PreparedStatement deleteBookStmt;

	public BooksManager() 
	{
		try 
		{
			conn = DriverManager
					.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			stmt = conn.createStatement();
			boolean bookTableExists = false;

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while (rs.next()) 
			{
				if ("Book".equalsIgnoreCase(rs.getString("TABLE_NAME"))) 
				{
					bookTableExists = true;
					break;
				}
			}

			if (!bookTableExists) 
			{
				stmt.executeUpdate(
						"CREATE TABLE book("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
						+ "title varchar(20),"
						+ "author varchar(30)"
						+ "datepublication integer)");
			}

			addBookStmt = conn.prepareStatement("INSERT INTO book (title, author, datepublication) VALUES (?,?.?)");

			getBookStmt = conn.prepareStatement("SELECT * FROM book");
			
			deleteBookStmt = conn.prepareStatement("DELETE FROM book");

		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}
	}

	public void addBook(Book book) 
	{
		try 
		{
			addBookStmt.setString(1, book.getTitle());
			addBookStmt.setString(2, book.getAuthor());
			addBookStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}

	}
	
	public List<Book> getAllBooks()
	{
		List<Book> books = new ArrayList<Book>();
		
		try
		{
			ResultSet rs = getBookStmt.executeQuery();
			while (rs.next())
			{
				books.add(new Book(rs.getString(1), rs.getString(2), rs.getInt(3)));
			}
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return books;
	}

	
	public void clearAllPerson() 
	{
		try 
		{
			deleteBookStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}

}
