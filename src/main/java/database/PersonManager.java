package database;

import java.sql.*;
import java.util.*;
import com.pl.robert.*;

public class PersonManager {

	private Connection conn;
	private Statement stmt;
	private PreparedStatement addPersonStmt;
	private PreparedStatement getPersonStmt;
	private PreparedStatement getPersonByNameStmt;
	private PreparedStatement getLastAddPersonStmt;
	private PreparedStatement deletePersonStmt;
	private PreparedStatement deletePersonByIdStmt;

	public PersonManager() 
	{
		try 
		{
			conn = DriverManager
					.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			stmt = conn.createStatement();
			boolean personTableExists = false;

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while (rs.next()) 
			{
				if ("Person".equalsIgnoreCase(rs.getString("TABLE_NAME"))) 
				{
					personTableExists = true;
					break;
				}
			}

			if (!personTableExists) 
			{
				stmt.executeUpdate(
						"CREATE TABLE person("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
						+ "name varchar(20),"
						+ "surname varchar(30)" + ")");
			}

			addPersonStmt = conn.prepareStatement("INSERT INTO person (name, surname) VALUES (?,?)");

			getPersonStmt = conn.prepareStatement("SELECT * FROM person");
			
			getPersonByNameStmt = conn.prepareStatement("SELECT * FROM person WHERE name=?");
			
			getLastAddPersonStmt = conn.prepareStatement("SELECT * FROM person ORDER BY id DESC LIMIT 1");
			
			deletePersonStmt = conn.prepareStatement("DELETE FROM person");
			
			deletePersonByIdStmt =conn.prepareStatement("DELETE FROM person WHERE id=?");

		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}
	}

	public void addPerson(Person person) 
	{
		try 
		{
			addPersonStmt.setString(1, person.getName());
			addPersonStmt.setString(2, person.getSurname());
			addPersonStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{

			e.printStackTrace();
		}

	}
	
	public List<Person> getAllPersons()
	{
		List<Person> persons = new ArrayList<Person>();
		
		try
		{
			ResultSet rs = getPersonStmt.executeQuery();
			while (rs.next())
			{
				persons.add(new Person(rs.getString(2), rs.getString(3)));
			}
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return persons;
	}
	
	public List<Person> getPersonByName(String name)
	{
		List<Person> persons = new ArrayList<Person>();
		
		try
		{
			getPersonByNameStmt.setString(1, name);
			ResultSet rs = getPersonByNameStmt.executeQuery();
			while (rs.next())
			{
				persons.add(new Person(rs.getString(2), rs.getString(3)));
			}
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return persons;
	}
	
	public String getNameLastAddPerson()
	{
		String name ="";
		try
		{
			ResultSet rs = getLastAddPersonStmt.executeQuery();
			rs.next();
			name = rs.getString(2);
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return name;
	}
	
	public String getSurnameLastAddPerson()
	{
		String name ="";
		try
		{
			ResultSet rs = getLastAddPersonStmt.executeQuery();
			rs.next();
			name = rs.getString(3);
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return name;
	}
	
	public void clearAllPerson() 
	{
		try 
		{
			deletePersonStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}
	
	public void deletePersonById(int id)
	{
		try
		{
			deletePersonByIdStmt.setInt(1, id);
			deletePersonByIdStmt.executeUpdate();
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
	}

}
