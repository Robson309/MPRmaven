package kat.services;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import kat.domain.*;

public class ClientManager {
	
	private Connection connect;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableClient = "CREATE TABLE Client(id bigint GENERATED BY DEFAULT AS IDENTITY," +
			"				 name varchar(20), surname varchar(20))";

	private PreparedStatement addClientStmt;
	private PreparedStatement deleteAllClientsStmt;
	private PreparedStatement getAllClientsStmt;

	private Statement statement;
	
	public ClientManager() {
	try {
		connect = DriverManager.getConnection(url);
		statement = connect.createStatement();

		ResultSet rs = connect.getMetaData().getTables(null, null, null, null);
		boolean tableExists = false;
		
		while (rs.next()) {
			if ("Client".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
				tableExists = true;
				break;
			} 
		}
	

		if (!tableExists) statement.executeUpdate(createTableClient);

		addClientStmt = connect.prepareStatement("INSERT INTO Client (name, surname) VALUES (?, ?)");
		deleteAllClientsStmt = connect.prepareStatement("DELETE FROM Client");
		getAllClientsStmt = connect.prepareStatement("SELECT id, name, surname FROM Client");

	} catch (SQLException e) {
		e.printStackTrace();
		}
	}


	Connection getConnection() {
		return connect;
	}

	void clearClients() {
		try {
			deleteAllClientsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addClient(Client c) {
		int count = 0;
		try {
			addClientStmt.setString(1, c.getName());
			addClientStmt.setString(2, c.getSurname());

			count = addClientStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	

	public List<Client> getAllClients() {
		List<Client> clients = new ArrayList<Client>();

		try {
			ResultSet rs = getAllClientsStmt.executeQuery();

			while (rs.next()) {
				Client c = new Client();
				c.setId(rs.getInt("id"));
				c.setName(rs.getString("name"));
				c.setSurname(rs.getString("surname"));
				clients.add(c);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return clients;
	}
}
