package com.pl.robert;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.pl.robert.*;

public class PersonManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTablePerson = "CREATE TABLE Person(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), varchar(20))";

	private PreparedStatement addPersonStmt;
	private PreparedStatement deleteAllPersonsStmt;
	private PreparedStatement getAllPersonsStmt;

	private Statement statement;

	public PersonManager() {
	try {
		connection = DriverManager.getConnection(url);
		statement = connection.createStatement();

		ResultSet rs = connection.getMetaData().getTables(null, null, null,
				null);
		boolean tableExists = false;
		while (rs.next()) {
			if ("Person".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
				tableExists = true;
				break;
			} 
		}


		if (!tableExists)
			statement.executeUpdate(createTablePerson);

		addPersonStmt = connection
				.prepareStatement("INSERT INTO Person (name, yob) VALUES (?, ?)");
		deleteAllPersonsStmt = connection
				.prepareStatement("DELETE FROM Person");
		getAllPersonsStmt = connection
				.prepareStatement("SELECT id, name, yob FROM Person");

	} catch (SQLException e) {
		e.printStackTrace();
	}
}


Connection getConnection() {
	return connection;
}

void clearPersons() {
	try {
		deleteAllPersonsStmt.executeUpdate();
	} catch (SQLException e) {
		e.printStackTrace();
	}
}

public int addPerson(Person person) {
	int count = 0;
	try {
		addPersonStmt.setString(1, person.getName());
		addPersonStmt.setString(2, person.getSurname());

		count = addPersonStmt.executeUpdate();

	} catch (SQLException e) {
		e.printStackTrace();
	}
	return count;
}

public List<Person> getAllPersons() {
	List<Person> persons = new ArrayList<Person>();

	try {
		ResultSet rs = getAllPersonsStmt.executeQuery();

		while (rs.next()) {
			Person p = new Person();
			p.setId(rs.getInt("id"));
			p.setName(rs.getString("name"));
			persons.add(p);
		}

	} catch (SQLException e) {
		e.printStackTrace();
	}
	return persons;
}


}